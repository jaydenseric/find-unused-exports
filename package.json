{
  "name": "find-unused-exports",
  "version": "6.0.0",
  "description": "A CLI and equivalent JS API to find unused ECMAScript module exports in a project.",
  "license": "MIT",
  "author": {
    "name": "Jayden Seric",
    "email": "me@jaydenseric.com",
    "url": "https://jaydenseric.com"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jaydenseric/find-unused-exports.git"
  },
  "homepage": "https://github.com/jaydenseric/find-unused-exports#readme",
  "bugs": "https://github.com/jaydenseric/find-unused-exports/issues",
  "funding": "https://github.com/sponsors/jaydenseric",
  "keywords": [
    "find",
    "audit",
    "test",
    "lint",
    "unused",
    "redundant",
    "exports",
    "cli",
    "esm",
    "mjs"
  ],
  "files": [
    "CliError.mjs",
    "errorConsole.mjs",
    "find-unused-exports.mjs",
    "findUnusedExports.mjs",
    "getVariableDeclarationIdentifierNames.mjs",
    "isDirectoryPath.mjs",
    "MODULE_GLOB.mjs",
    "reportCliError.mjs",
    "scanModuleCode.mjs"
  ],
  "sideEffects": false,
  "exports": {
    "./findUnusedExports.mjs": "./findUnusedExports.mjs",
    "./package.json": "./package.json"
  },
  "bin": {
    "find-unused-exports": "find-unused-exports.mjs"
  },
  "engines": {
    "node": "^18.18.0 || ^20.9.0 || >=22.0.0"
  },
  "dependencies": {
    "@babel/core": "^7.19.6",
    "@types/babel__core": "^7.1.19",
    "@types/node": "*",
    "arg": "^5.0.2",
    "globby": "^14.0.2",
    "kleur": "^4.1.5"
  },
  "devDependencies": {
    "@eslint/js": "^9.6.0",
    "@types/eslint": "^8.56.10",
    "@types/eslint__js": "^8.42.3",
    "coverage-node": "^8.0.0",
    "disposable-directory": "^6.0.0",
    "eslint": "^9.6.0",
    "eslint-plugin-jsdoc": "^48.5.0",
    "eslint-plugin-simple-import-sort": "^12.1.0",
    "globals": "^15.7.0",
    "prettier": "^3.3.2",
    "replace-stack-traces": "^2.0.0",
    "snapshot-assertion": "^5.0.0",
    "typescript": "^5.5.2"
  },
  "scripts": {
    "eslint": "eslint",
    "prettier": "prettier -c .",
    "types": "tsc -p jsconfig.json",
    "tests": "coverage-node --test-reporter=spec --test *.test.mjs",
    "test": "npm run eslint && npm run prettier && npm run types && npm run tests",
    "prepublishOnly": "npm test"
  }
}
